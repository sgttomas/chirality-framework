name: CI

on:
  push:
    branches: [ main, refactor-2, refactor-3 ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install ripgrep
      run: |
        sudo apt-get update
        sudo apt-get install -y ripgrep
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    # Guards first - fail fast if architectural rules are violated
    - name: Run no-legacy guard
      run: python scripts/guard_no_legacy.py
    
    - name: Generate asset manifest
      run: python -m chirality.interfaces.cli assets-verify
    
    - name: Check kernel hash
      run: python scripts/check_kernel_hash.py
    
    - name: Check for legacy imports
      run: python scripts/codemod_legacy_imports.py
    
    # Code quality checks
    - name: Check code formatting
      run: black --check chirality/ tests/ scripts/
    
    - name: Run linter
      run: ruff check chirality/
    
    - name: Type checking
      run: mypy chirality/
    
    # Tests
    - name: Run tests
      run: pytest -q

    # Optional: Phase 2 smoke test (when container available)
    # - name: Phase 2 smoke test
    #   if: false  # Enable when Neo4j container is available
    #   run: |
    #     # Start Neo4j container
    #     docker run -d --name neo4j -p 7687:7687 -e NEO4J_AUTH=neo4j/test neo4j:latest
    #     # Wait for startup
    #     sleep 30
    #     # Run smoke test
    #     python -m chirality.interfaces.cli export-neo4j --uri bolt://localhost:7687 --user neo4j --pwd test --artifacts runs/smoke || true