name: Feature Request
description: Suggest a new feature or enhancement for the Chirality Framework
title: "[FEATURE] "
labels: ["enhancement", "needs-triage"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thank you for suggesting a feature! Please help us understand your needs and how this feature would improve the Chirality Framework.

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: Is your feature request related to a problem? Please describe the problem or limitation you're experiencing.
      placeholder: "I'm always frustrated when..."
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: Describe the solution you'd like to see implemented
      placeholder: "I would like to be able to..."
    validations:
      required: true

  - type: dropdown
    id: component
    attributes:
      label: Framework Component
      description: Which component would this feature affect?
      options:
        - "Prompt System (assets, registry, builder)"
        - "CLI Commands"
        - "Core Operations (matrix computations)"
        - "LLM Integration" 
        - "Combined Lensing"
        - "Exporters (Neo4j, JSONL, working memory)"
        - "Asset Management"
        - "Configuration"
        - "Documentation"
        - "Testing Infrastructure"
        - "New Component"
        - "Other"
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: Feature Priority
      description: How important is this feature to your use case?
      options:
        - "Critical (blocking current work)"
        - "High (would significantly improve workflow)"
        - "Medium (nice to have improvement)"
        - "Low (minor enhancement)"
    validations:
      required: true

  - type: checkboxes
    id: feature-type
    attributes:
      label: Feature Type
      description: What type of feature is this? (Select all that apply)
      options:
        - label: "New API/functionality"
        - label: "CLI enhancement"
        - label: "Performance improvement"
        - label: "Developer experience improvement"
        - label: "Integration with external services"
        - label: "Configuration option"
        - label: "Documentation enhancement"

  - type: textarea
    id: alternatives
    attributes:
      label: Alternative Solutions
      description: Describe any alternative solutions or features you've considered
      placeholder: "I also considered..."

  - type: textarea
    id: use-cases
    attributes:
      label: Use Cases
      description: Describe specific use cases where this feature would be valuable
      placeholder: |
        1. When working with...
        2. For users who need to...
        3. In scenarios where...

  - type: checkboxes
    id: semantic-compliance
    attributes:
      label: Semantic Framework Compliance
      description: Please confirm your feature request aligns with framework principles
      options:
        - label: "This feature respects maintainer semantic authority (no AI-generated semantic content)"
        - label: "This feature maintains the canonical nature of the framework's interpretation pipeline"
        - label: "This feature does not introduce optionality that would compromise semantic integrity"

  - type: textarea
    id: implementation
    attributes:
      label: Implementation Ideas
      description: Do you have ideas about how this could be implemented? (Optional)
      placeholder: "This could potentially be implemented by..."

  - type: textarea
    id: additional
    attributes:
      label: Additional Context
      description: Add any other context, examples, or resources related to this feature request